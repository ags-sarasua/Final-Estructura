***Routers***
La posición de los routers queda determinada por una única coordenada (coordenada x). Los
routers pueden ser agregados (“AGREGADO”; al agregarlos los routers se activan), activados
(Router “ACTIVO”) y desactivados (Router “INACTIVO”) en cualquier momento.
Cada vez que un paquete se envía desde el router de origen hacia un router de destino, debe
pasar obligatoriamente por todos los routers intermedios.

Debido a condiciones adversas, se prevé que cualquier router podría averiarse en cualquier
momento, y ante esta situación el sistema lo detecta enseguida y lo baipasea, de modo que el
paquete sigue el curso hacia su destino, con el menor retraso posible, y sin incurrir en pérdida de
la información. Luego de un tiempo aleatorio de reset (5-10s), el router vuelve a entrar en
funcionamiento.
Los routers tienen además un tiempo de latencia de 100ms, que es un tiempo muerto entre envíos
durante el cual un router no puede procesar paquetes (ni enviar ni recibir).

***Paquetes***
Están constituidos por el mensaje a enviar (los datos) y toda la información extra necesaria (la
metadata), la cual está encapsulada en el mismo mensaje. Se asume que cualquier mensaje
(cadena de texto) puede enviarse en un único viaje sin necesidad de fragmentarlo. Tener
presente que los mensajes podrían no llegar en orden a su destino, por lo que los routers deben
poder establecer el orden correcto de los mensajes enviados por el router de origen.
Los paquetes tienen todos la misma prioridad, por lo que se deben ir procesando a medida que
arriban a un nodo del sistema (router). Sin embargo, un router debe siempre priorizar los
paquetes que debe retransmitir, antes de iniciar o continuar con el envío de los paquetes
originados en él.

***Funcionamiento***
La simulación será la interfaz del programa y será llamada con el parámetro dado por el tiempo a
simular (en segundos). La misma se implementará mediante una clase, la cual se llamará
RoutingSim.
Al terminar la simulación se deberá:
● Calcular la tasa de paquetes que cada router del sistema procesó (diferenciando en
reenvío y recepción final), informando el resultado por consola.
● Realizar un gráfico de barras que muestre la cantidad de paquetes enviados y recibidos por
cada router.
● Crear los archivos "router_x" (siendo x la posición del router) donde se almacenen, de
forma ordenada, todos los mensajes recibidos por cada uno de los nodos junto con el
nombre del nodo de origen.

    Ejemplo: router_10.txt

    Origen: ROUTER_5
    Buenos días a todos.
    Este es un mensaje

● Crear el archivo "system_log.csv" el cual contendrá la información de los eventos
registrados en el sistema. Los eventos a registrar son los estados posibles:

*ROUTER “AGREGADO”
*ROUTER "ACTIVO"
*ROUTER "INACTIVO"
*ROUTER "EN_RESET"

Se deben consignar los eventos registrados en el archivo csv, en líneas separadas, identificando el
Router en cuestión Router_{x}, la fecha y hora del evento y el estado registrado.
Ejemplo: system_log.csv
ROUTER_5,01-07-23 20:33:30,"AGREGADO"
ROUTER_5,01-07-23 20:33:30,"ACTIVO"
ROUTER_12,01-07-23 20:34:01 "AGREGADO"
ROUTER_12,01-07-23 20:34:01 "ACTIVO"

***Qué miran los profes***
De las estructuras vistas: Listas secuenciales, listas enlazadas, árboles binarios de
búsqueda, pilas, colas, conjuntos, diccionarios y tuplas, Identificar las diferentes
estructuras a implementar acorde a las funcionalidades que se les piden.
Se evaluará el correcto uso de las EDA vistas en la materia, haciendo hincapié en la
eficiencia de la implementación.

